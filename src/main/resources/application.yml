server:
  port: 8090
spring:
  mvc:
    static-path-pattern: "/resources/**"
  main:
    allow-bean-definition-overriding: true
  application:
    name: auth-service
  security:
    oauth2:
      client:
        registration:
          yandex:
            clientId: 6fac7a08eb4d464bbe4b44266a60c57a
            clientSecret: e2598f39504f4cff8e7cf3826f4cfa40
            redirectUri: "http://localhost:8090/login/oauth2/code/yandex"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
          vk:
            client-name: 'vk'
            clientId: '51788027'
            clientSecret: 'ZztXJT28kicJXzPYIbKd'
            redirectUri: "http://localhost:8090/login/oauth2/code/vk"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
          google:
            clientId: '1014037692582-l4ivt43kdb5o7mh70r0khejacb6b99nf.apps.googleusercontent.com'
            clientSecret: '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'
            redirectUri: 'http://localhost:8090/login/oauth2/code/google'
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            scope:
              - openid
              - email
              - profile
              - https://www.googleapis.com/auth/user.phonenumbers.read
              - https://www.googleapis.com/auth/user.gender.read
              - https://www.googleapis.com/auth/user.birthday.read
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: login
          vk:
            #revoke=1 needs to always show vk dialog
            authorization-uri: https://oauth.vk.com/authorize?revoke=1
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get?{user_id}&v=5.95&fields=id,domain,photo_id,verified,sex,bdate,city,country,contacts,has_mobile,photo_max,home_town,has_photo&display=popup&lang=ru&access_token=xxxxx
            user-name-attribute: id
      authorization-server:
        issuer-url: http://localhost:8090
        introspection-endpoint: /oauth2/token-info
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/authSso
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: 'create-drop'
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
logging:
  level:
    org:
      springframework:
        security: DEBUG