server:
  port: 8090
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: auth-service
  security:
    oauth2:
      client:
        registration:
          yandex:
            clientId: 6fac7a08eb4d464bbe4b44266a60c57a
            clientSecret: e2598f39504f4cff8e7cf3826f4cfa40
            redirectUri: "http://localhost:8090/login/oauth2/code/yandex"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
          vk:
            client-name: 'vk'
            clientId: '51788027'
            clientSecret: 'ZztXJT28kicJXzPYIbKd'
            redirectUri: "http://localhost:8090/login/oauth2/code/vk"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: login
          vk:
            #revoke=1 needs to always show vk dialog
            authorization-uri: https://oauth.vk.com/authorize?revoke=1
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get?{user_id}&v=5.95&fields=id,domain,photo_id,verified,sex,bdate,city,country,contacts,has_mobile,photo_max,home_town,has_photo&display=popup&lang=ru&access_token=xxxxx
            user-name-attribute: id
      authorization-server:
        issuer-url: http://localhost:8090
        introspection-endpoint: /oauth2/token-info
  datasource:
    url: jdbc:postgresql://127.0.0.1:5433/authSso
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka